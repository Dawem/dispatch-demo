plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
    implementation files('libs/model.jar')
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.h2database:h2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('buildDockerImage') {
	doLast {
		exec {
			commandLine 'docker', 'build', '-t', "${project.name}:latest", '.'
		}
	}
}

tasks.register('deploy') {
	doLast {
		exec {
			commandLine 'kubectl', 'apply', '-f', "deployment/service.yaml"
		}
		exec {
			commandLine 'kubectl', 'apply', '-f', "deployment/ingress.yaml"
		}
		exec {
			commandLine 'kubectl', 'apply', '-f', "deployment/deployment.yaml"
		}
		exec {
			commandLine 'kubectl', 'apply', '-f', "deployment/configmap.yaml"
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
